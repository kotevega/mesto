(()=>{"use strict";function t(e){return t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},t(e)}function e(e,n){for(var r=0;r<n.length;r++){var o=n[r];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,(void 0,i=function(e,n){if("object"!==t(e)||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var o=r.call(e,"string");if("object"!==t(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(o.key),"symbol"===t(i)?i:String(i)),o)}var i}var n=function(){function t(e){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._baseUrl=e.baseUrl,this._headers=e.headers}var n,r;return n=t,(r=[{key:"_checkResponse",value:function(t){return t.ok?t.json():Promise.reject("Ошибка: ".concat(t.status))}},{key:"getInitialCardsApi",value:function(){var t=this;return fetch("".concat(this._baseUrl,"/cards"),{method:"GET",headers:this._headers}).then((function(e){return t._checkResponse(e)}))}},{key:"postNewCardApi",value:function(t,e){var n=this;return fetch("".concat(this._baseUrl,"/cards"),{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:e})}).then((function(t){return n._checkResponse(t)}))}},{key:"getUserInfoFromApi",value:function(){var t=this;return fetch("".concat(this._baseUrl,"/users/me"),{method:"GET",headers:this._headers}).then((function(e){return t._checkResponse(e)}))}},{key:"patchUserInfoToApi",value:function(t){var e=this;return fetch("".concat(this._baseUrl,"/users/me"),{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t.name,about:t.about})}).then((function(t){return e._checkResponse(t)}))}},{key:"patchUserAvatarToApi",value:function(t){var e=this;return fetch("".concat(this._baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t.avatar})}).then((function(t){return e._checkResponse(t)}))}},{key:"deleteCardFromApi",value:function(t){var e=this;return fetch("".concat(this._baseUrl,"/cards/").concat(t),{method:"DELETE",headers:this._headers}).then((function(t){return e._checkResponse(t)}))}},{key:"putCardLikeToApi",value:function(t){var e=this;return fetch("".concat(this._baseUrl,"/cards/").concat(t,"/likes"),{method:"PUT",headers:this._headers}).then((function(t){return e._checkResponse(t)}))}},{key:"deleteCardLikeFromApi",value:function(t){var e=this;return fetch("".concat(this._baseUrl,"/cards/").concat(t,"/likes"),{method:"DELETE",headers:this._headers}).then((function(t){return e._checkResponse(t)}))}}])&&e(n.prototype,r),Object.defineProperty(n,"prototype",{writable:!1}),t}();function r(t){return r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},r(t)}function o(t,e){for(var n=0;n<e.length;n++){var o=e[n];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(t,(void 0,i=function(t,e){if("object"!==r(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var o=n.call(t,"string");if("object"!==r(o))return o;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(o.key),"symbol"===r(i)?i:String(i)),o)}var i}var i=function(){function t(e){var n=e.data,r=e.userId,o=e.templateSelector,i=e.handleClickDeleteButton,u=e.handleCardClick,a=e.handleLikeButtonClick,c=e.handleLikeDelete;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._dataCard=n,this._name=n.name,this._imageLink=n.link,this._idCard=n._id,this._likes=n.likes,this._ownerId=n.owner._id,this._userId=r,this._selector=o,this._handleClickDeleteButton=i,this._handleCardClick=u,this._handleLikeButton=a,this._handleLikeDelete=c}var e,n;return e=t,(n=[{key:"_getElement",value:function(){return document.querySelector(this._selector).content.querySelector(".element__list").cloneNode(!0)}},{key:"createCard",value:function(){return this._element=this._getElement(),this._elementCaption=this._element.querySelector(".element__caption"),this._elementImage=this._element.querySelector(".element__image"),this._likeCardButton=this._element.querySelector(".element__like-button"),this._buttonDeleteCard=this._element.querySelector(".element__delete-button"),this._popupOpenImage=this._element.querySelector(".element__button-image"),this._elementLikeCounter=this._element.querySelector(".element__counter"),this._elementCaption.textContent=this._name,this._elementImage.src=this._imageLink,this._elementImage.alt=this._name,this._ownerId!==this._userId&&this._buttonDeleteCard.remove(),this.countLikes(this._dataCard),this._setEventListeners(),this._element}},{key:"_handleLikeButtonClick",value:function(t){this._checkLikes()?this._handleLikeDelete(t):this._handleLikeButton(t)}},{key:"_setEventListeners",value:function(){var t=this;this._likeCardButton.addEventListener("click",(function(){return t._handleLikeButtonClick(t._idCard)})),this._popupOpenImage.addEventListener("click",(function(){return t._handleCardClick(t._name,t._imageLink)})),this._buttonDeleteCard.addEventListener("click",(function(){return t._handleClickDeleteButton(t._idCard,t._element)}))}},{key:"_checkLikes",value:function(){var t=this;return this._likes.some((function(e){return e._id===t._userId}))}},{key:"countLikes",value:function(t){this._likes=t.likes,0===this._likes.length?this._elementLikeCounter.textContent="0":this._elementLikeCounter.textContent=this._likes.length,this._checkLikes()?this._likeCardButton.classList.add("element__like-button_active"):this._likeCardButton.classList.remove("element__like-button_active")}}])&&o(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function u(t){return u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},u(t)}function a(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==u(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==u(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===u(o)?o:String(o)),r)}var o}var c=function(){function t(e,n){var r=e.renderer;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._renderer=r,this._container=document.querySelector(n)}var e,n;return e=t,(n=[{key:"renderItems",value:function(t,e){var n=this;t.reverse().forEach((function(t){return n._renderer(t,e)}))}},{key:"addItem",value:function(t){this._container.prepend(t)}}])&&a(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function l(t){return l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},l(t)}function s(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==l(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==l(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===l(o)?o:String(o)),r)}var o}var f=function(){function t(e){var n=e.nameSelector,r=e.jobSelector,o=e.avatarSelector;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._nameSelector=document.querySelector(n),this._jobSelector=document.querySelector(r),this._avatarSelector=document.querySelector(o)}var e,n;return e=t,(n=[{key:"getUserInfo",value:function(){return this._userData={},this._userData.name=this._nameSelector.textContent,this._userData.about=this._jobSelector.textContent,this._userData}},{key:"setUserInfo",value:function(t){t.name&&(this._nameSelector.textContent=null==t?void 0:t.name),t.about&&(this._jobSelector.textContent=null==t?void 0:t.about)}},{key:"setUserAvatar",value:function(t){t.avatar&&(this._avatarSelector.src=null==t?void 0:t.avatar)}}])&&s(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function p(t){return p="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},p(t)}function h(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,y(r.key),r)}}function y(t){var e=function(t,e){if("object"!==p(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==p(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(t);return"symbol"===p(e)?e:String(e)}var m=function(){function t(e){var n,r,o,i=this;!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),n=this,o=function(t){"Escape"===t.code&&i.close()},(r=y(r="_handleEscClose"))in n?Object.defineProperty(n,r,{value:o,enumerable:!0,configurable:!0,writable:!0}):n[r]=o,this._popupSelector=e,this._popup=document.querySelector(this._popupSelector),this._buttonSubmit=this._popup.querySelector(".popup__submit-button")}var e,n;return e=t,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"renderLoader",value:function(t,e){t?(this.defaulText=this._buttonSubmit.textContent,this._buttonSubmit.textContent=e):this._buttonSubmit.textContent=this.defaulText}},{key:"setEventListeners",value:function(){var t=this;this._popup.addEventListener("mousedown",(function(e){e.target.classList.contains("popup_opened")&&t.close(),e.target.classList.contains("popup__close-button")&&t.close()}))}}])&&h(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}();function d(t){return d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},d(t)}function b(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==d(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==d(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===d(o)?o:String(o)),r)}var o}function v(){return v="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=S(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},v.apply(this,arguments)}function _(t,e){return _=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},_(t,e)}function S(t){return S=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},S(t)}var k=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&_(t,e)}(u,t);var e,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=S(r);if(o){var n=S(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===d(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t){var e,n=t.popupSelector,r=t.handleFormSubmit;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(e=i.call(this,n))._handleFormSubmit=r,e._form=e._popup.querySelector(".popup__form"),e}return e=u,(n=[{key:"_getInputValues",value:function(){var t=this;return this._inputList=this._popup.querySelectorAll(".popup__input"),this._formValues={},this._inputList.forEach((function(e){t._formValues[e.name]=e.value})),this._formValues}},{key:"setEventListeners",value:function(){var t=this;v(S(u.prototype),"setEventListeners",this).call(this),this._form.addEventListener("submit",(function(e){e.preventDefault(),t._handleFormSubmit(t._getInputValues())}))}},{key:"close",value:function(){v(S(u.prototype),"close",this).call(this),this._form.reset()}}])&&b(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),u}(m);function g(t){return g="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},g(t)}function w(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==g(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==g(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===g(o)?o:String(o)),r)}var o}function E(){return E="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=j(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},E.apply(this,arguments)}function C(t,e){return C=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},C(t,e)}function j(t){return j=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},j(t)}var L=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&C(t,e)}(u,t);var e,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=j(r);if(o){var n=j(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===g(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t){var e;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(e=i.call(this,t))._image=e._popup.querySelector(".popup__image"),e._heading=e._popup.querySelector(".popup__heading"),e}return e=u,(n=[{key:"open",value:function(t,e){E(j(u.prototype),"open",this).call(this),this._image.src=e,this._image.alt=t,this._heading.textContent=t}}])&&w(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),u}(m);function O(t){return O="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},O(t)}function P(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==O(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==O(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===O(o)?o:String(o)),r)}var o}function T(){return T="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(t,e,n){var r=function(t,e){for(;!Object.prototype.hasOwnProperty.call(t,e)&&null!==(t=B(t)););return t}(t,e);if(r){var o=Object.getOwnPropertyDescriptor(r,e);return o.get?o.get.call(arguments.length<3?t:n):o.value}},T.apply(this,arguments)}function I(t,e){return I=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},I(t,e)}function B(t){return B=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},B(t)}var R=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,"prototype",{writable:!1}),e&&I(t,e)}(u,t);var e,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,e=B(r);if(o){var n=B(this).constructor;t=Reflect.construct(e,arguments,n)}else t=e.apply(this,arguments);return function(t,e){if(e&&("object"===O(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}(this,t)});function u(t){var e,n=t.popupSelector,r=t.handleFormSubmit;return function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,u),(e=i.call(this,n))._handleFormSubmit=r,e._buttonSubmit=e._popup.querySelector(".popup__submit-button"),e}return e=u,(n=[{key:"open",value:function(t,e){T(B(u.prototype),"open",this).call(this),this.id=t,this.card=e}},{key:"setEventListeners",value:function(){var t=this;T(B(u.prototype),"setEventListeners",this).call(this),this._buttonSubmit.addEventListener("click",(function(e){e.preventDefault(),t._handleFormSubmit(t.id,t.card)}))}}])&&P(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),u}(m);function A(t){return A="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t},A(t)}function q(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(t,(void 0,o=function(t,e){if("object"!==A(t)||null===t)return t;var n=t[Symbol.toPrimitive];if(void 0!==n){var r=n.call(t,"string");if("object"!==A(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(t)}(r.key),"symbol"===A(o)?o:String(o)),r)}var o}var x=function(){function t(e,n){!function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}(this,t),this._form=e,this._inputElement=n.inputElement,this._inputErrorClass=n.inputErrorClass,this._errorClass=n.errorClass,this._inputVisibleError=n.inputVisibleError,this._inactiveButtonClass=n.inactiveButtonClass,this._inputList=Array.from(this._form.querySelectorAll(n.inputElement)),this._submitButton=this._form.querySelector(n.submitButtonSelector)}var e,n;return e=t,(n=[{key:"resetValidation",value:function(){var t=this;this._inputList.forEach((function(e){t._hideInputError(e)}))}},{key:"_showInputError",value:function(t){this._errorTextElement=this._form.querySelector("".concat(this._inputErrorClass).concat(t.name)),this._errorTextElement.textContent=t.validationMessage,this._errorTextElement.classList.add(this._errorClass),t.classList.add(this._inputVisibleError)}},{key:"_hideInputError",value:function(t){this._errorTextElement=this._form.querySelector("".concat(this._inputErrorClass).concat(t.name)),this._errorTextElement.textContent="",this._errorTextElement.classList.remove(this._errorClass),t.classList.remove(this._inputVisibleError)}},{key:"_enableButton",value:function(){this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1}},{key:"disableButton",value:function(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}},{key:"_checkInputValidity",value:function(t){t.validity.valid?this._hideInputError(t):this._showInputError(t)}},{key:"_hasInvalidInput",value:function(){return Array.from(this._inputList).some((function(t){return!t.validity.valid}))}},{key:"_toggleButtonState",value:function(){this._hasInvalidInput()?this.disableButton():this._enableButton()}},{key:"_setEventListener",value:function(){var t=this;this._inputList.forEach((function(e){t._toggleButtonState(),e.addEventListener("input",(function(){t._checkInputValidity(e),t._toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this._setEventListener()}}])&&q(e.prototype,n),Object.defineProperty(e,"prototype",{writable:!1}),t}(),U={inputElement:".popup__input",inputErrorClass:".popup__input-error_type_",errorClass:"popup__input-error",inputVisibleError:"popup__input_visible-error",submitButtonSelector:".popup__submit-button",inactiveButtonClass:"popup__submit-button_disabled"};function D(t,e){(null==e||e>t.length)&&(e=t.length);for(var n=0,r=new Array(e);n<e;n++)r[n]=t[n];return r}var V,F=document.forms.popup_form_user,N=document.forms.popup_form_avatar,J=document.forms.popup_form_place,z=document.querySelector(".profile__edit-button"),G=document.querySelector(".profile__edit-avatar"),H=document.querySelector(".profile__add-button"),M=document.querySelector("#popup-name"),$=document.querySelector("#popup-about"),K=new x(N,U),Q=new x(J,U),W=new x(F,U),X=new n({baseUrl:"https://mesto.nomoreparties.co/v1/cohort-65",headers:{authorization:"efafdb7e-dc8f-4c7a-ad89-5ae9b99df990","Content-Type":"application/json"}});Promise.all([X.getUserInfoFromApi(),X.getInitialCardsApi()]).then((function(t){var e,n,r=(n=2,function(t){if(Array.isArray(t))return t}(e=t)||function(t,e){var n=null==t?null:"undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(null!=n){var r,o,i,u,a=[],c=!0,l=!1;try{if(i=(n=n.call(t)).next,0===e){if(Object(n)!==n)return;c=!1}else for(;!(c=(r=i.call(n)).done)&&(a.push(r.value),a.length!==e);c=!0);}catch(t){l=!0,o=t}finally{try{if(!c&&null!=n.return&&(u=n.return(),Object(u)!==u))return}finally{if(l)throw o}}return a}}(e,n)||function(t,e){if(t){if("string"==typeof t)return D(t,e);var n=Object.prototype.toString.call(t).slice(8,-1);return"Object"===n&&t.constructor&&(n=t.constructor.name),"Map"===n||"Set"===n?Array.from(t):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?D(t,e):void 0}}(e,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];V=o._id,tt.setUserInfo(o),tt.setUserAvatar(o),Z.renderItems(i,V)})).catch((function(t){return console.log("Ошибка: ".concat(t))}));var Y=function(t,e){var n=new i({data:t,userId:e,templateSelector:".element-template",handleClickDeleteButton:function(t,e){ot.open(t,e)},handleCardClick:function(t,e){it.open(t,e)},handleLikeButtonClick:function(t){X.putCardLikeToApi(t).then((function(t){n.countLikes(t)})).catch((function(t){return console.log("Ошибка: ".concat(t))}))},handleLikeDelete:function(t){X.deleteCardLikeFromApi(t).then((function(t){n.countLikes(t)})).catch((function(t){return console.log("Ошибка: ".concat(t))}))}});return n.createCard()},Z=new c({renderer:function(t,e){Z.addItem(Y(t,e))}},".element"),tt=new f({nameSelector:".profile__name",jobSelector:".profile__occupation",avatarSelector:".profile__avatar"}),et=new k({popupSelector:".popup_type-avatar",handleFormSubmit:function(t){et.renderLoader(!0,"Сохранение..."),X.patchUserAvatarToApi(t).then((function(t){tt.setUserAvatar(t),et.close()})).catch((function(t){return console.log("Ошибка: ".concat(t))})).finally((function(){et.renderLoader(!1)}))}}),nt=new k({popupSelector:".popup_type-user",handleFormSubmit:function(t){nt.renderLoader(!0,"Сохранение..."),X.patchUserInfoToApi(t).then((function(t){tt.setUserInfo(t),nt.close()})).catch((function(t){return console.log("Ошибка: ".concat(t))})).finally((function(){nt.renderLoader(!1)}))}}),rt=new k({popupSelector:".popup_type-place",handleFormSubmit:function(t){rt.renderLoader(!0,"Сохранение..."),X.postNewCardApi(t.imageName,t.imageLink).then((function(t){Z.addItem(Y(t,V)),rt.close()})).catch((function(t){return console.log("Ошибка: ".concat(t))})).finally((function(){rt.renderLoader(!1)}))}}),ot=new R({popupSelector:".popup_type-accept",handleFormSubmit:function(t,e){ot.renderLoader(!0,"Сохранение..."),X.deleteCardFromApi(t).then((function(){e.remove(),e=null,ot.close()})).catch((function(t){return console.log("Ошибка: ".concat(t))})).finally((function(){ot.renderLoader(!1)}))}}),it=new L(".popup_type-zoom");K.enableValidation(),W.enableValidation(),Q.enableValidation(),et.setEventListeners(),nt.setEventListeners(),it.setEventListeners(),rt.setEventListeners(),ot.setEventListeners(),G.addEventListener("click",(function(){et.open(),K.resetValidation(),K.disableButton()})),z.addEventListener("click",(function(){nt.open(),M.value=tt.getUserInfo().name,$.value=tt.getUserInfo().about,W.resetValidation(),W.disableButton()})),H.addEventListener("click",(function(){rt.open(),Q.resetValidation(),Q.disableButton()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,